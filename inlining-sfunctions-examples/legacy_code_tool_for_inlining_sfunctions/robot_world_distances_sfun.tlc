%% File : robot_world_distances_sfun.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for robot_world_distances_sfun
%%
%% Simulink version      : 8.3 (R2014a) 27-Dec-2013
%% TLC file generated on : 29-Jun-2018 16:42:58

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'robot_world_distances_sfun';
     def.OutputFcnSpec = 'void robot_world_distances_out(double u1[1], double u2[1], double u3[208], double u4[30], double u5[9], double u6[30],  double u7[9], double u8[30],  double u9[9], double u10[30], double u11[9], double u12[10], double u13[3], double u14[18], double u15[18], double u16[96], double u17[6], double y1[78], double y2[78], double y3[234], double y4[234], double y5[234], double y6[1], double y7[1], double y8[1], int32 work1[1], void work2[1], void work3[1], void work4[1], int32 work5[1], int32 work6[1], int32 work7[1])';
     def.HeaderFiles = {'robot_world_distances.h', 'collision_api.h', 'math_geometry.h'};
     def.SourceFiles = {'robot_world_distances.cpp', 'collision.cpp', 'collision_api.cpp', 'math_geometry.cpp'};
     def.IncPaths = {'controllers/src/collision', 'controllers/build'};
     def.SrcPaths = {'controllers/src/collision'};
     def.Options.language = 'C++';
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements robot_world_distances_sfun "C"

%% Function: FcnGenerateUniqueFileName ====================================
%%
%function FcnGenerateUniqueFileName(filename, type) void
  %%
  %assign isReserved = TLC_FALSE
  %foreach idxFile = CompiledModel.DataObjectUsage.NumFiles[0]
    %assign thisFile = CompiledModel.DataObjectUsage.File[idxFile]
    %if (thisFile.Name==filename) && (thisFile.Type==type)
      %assign isReserved = TLC_TRUE
      %break
    %endif
  %endforeach
  %if (isReserved==TLC_TRUE)
    %assign filename = FcnGenerateUniqueFileName(filename + "_", type)
  %endif
  %return filename
  %%
%endfunction

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C++
  %if ::GenCPP==0 && !IsModelReferenceSimTarget()
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C++ Target Language")>
  %endif

  %if IsModelReferenceSimTarget()

    %assign hFileName = FcnGenerateUniqueFileName("robot_world_distances_sfun_wrapper", "header")
    %assign hFileNameMacro = FEVAL("upper", hFileName)
    %openfile hFile = "%<hFileName>.h"
    %selectfile hFile
    #ifndef _%<hFileNameMacro>_H_
    #define _%<hFileNameMacro>_H_

    #include "tmwtypes.h"

    extern void robot_world_distances_sfun_wrapper_output( const real_T *u1, const real_T *u2, const real_T *u3, const real_T *u4, const real_T *u5, const real_T *u6, const real_T *u7, const real_T *u8, const real_T *u9, const real_T *u10, const real_T *u11, const real_T *u12, const real_T *u13, const real_T *u14, const real_T *u15, const real_T *u16, const real_T *u17,  real_T *y1,  real_T *y2,  real_T *y3,  real_T *y4,  real_T *y5,  real_T *y6,  real_T *y7,  real_T *y8,  int32_T *work1,  void **work2,  void **work3,  void **work4,  int32_T *work5,  int32_T *work6,  int32_T *work7);

    #endif
    %closefile hFile

    %assign cFileName = FcnGenerateUniqueFileName("robot_world_distances_sfun_wrapper", "source")
    %openfile cFile = "%<cFileName>.cpp"
    %selectfile cFile
    #include <string.h>
    #include "tmwtypes.h"
    #include "robot_world_distances.h"
    #include "collision_api.h"
    #include "math_geometry.h"

    extern "C" {
    void robot_world_distances_sfun_wrapper_output( const real_T *u1, const real_T *u2, const real_T *u3, const real_T *u4, const real_T *u5, const real_T *u6, const real_T *u7, const real_T *u8, const real_T *u9, const real_T *u10, const real_T *u11, const real_T *u12, const real_T *u13, const real_T *u14, const real_T *u15, const real_T *u16, const real_T *u17,  real_T *y1,  real_T *y2,  real_T *y3,  real_T *y4,  real_T *y5,  real_T *y6,  real_T *y7,  real_T *y8,  int32_T *work1,  void **work2,  void **work3,  void **work4,  int32_T *work5,  int32_T *work6,  int32_T *work7) {


      robot_world_distances_out( (real_T*)(u1), (real_T*)(u2), (real_T*)(u3), (real_T*)(u4), (real_T*)(u5), (real_T*)(u6), (real_T*)(u7), (real_T*)(u8), (real_T*)(u9), (real_T*)(u10), (real_T*)(u11), (real_T*)(u12), (real_T*)(u13), (real_T*)(u14), (real_T*)(u15), (real_T*)(u16), (real_T*)(u17), y1, y2, y3, y4, y5, y6, y7, y8, work1, work2, work3, work4, work5, work6, work7);

    }
    } 

    %closefile cFile

    %<LibAddToCommonIncludes("%<hFileName>.h")>
    %if IsModelReferenceSimTarget()
        %<SLibAddToStaticSources("%<cFileName>.cpp")>
    %else
        %<LibAddToModelSources("%<cFileName>")>
    %endif

  %else

    %<LibAddToCommonIncludes("robot_world_distances.h")>
    %<LibAddToCommonIncludes("collision_api.h")>
    %<LibAddToCommonIncludes("math_geometry.h")>

  %endif

    %<SLibAddToStaticSources("robot_world_distances.cpp")>
    %<SLibAddToStaticSources("collision.cpp")>
    %<SLibAddToStaticSources("collision_api.cpp")>
    %<SLibAddToStaticSources("math_geometry.cpp")>

  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %if IsModelReferenceSimTarget()
  %else
    %<LibBlockSetIsExpressionCompliant(block)>
  %endif
  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
  %if IsModelReferenceSimTarget()
    %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
    %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
    %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
    %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
    %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
    %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
    %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
    %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
    %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
    %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
    %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
    %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
    %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
    %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
    %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
    %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
    %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
    %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
    %assign y3_ptr = LibBlockOutputSignalAddr(2, "", "", 0)
    %assign y4_ptr = LibBlockOutputSignalAddr(3, "", "", 0)
    %assign y5_ptr = LibBlockOutputSignalAddr(4, "", "", 0)
    %assign y6_ptr = LibBlockOutputSignalAddr(5, "", "", 0)
    %assign y7_ptr = LibBlockOutputSignalAddr(6, "", "", 0)
    %assign y8_ptr = LibBlockOutputSignalAddr(7, "", "", 0)
    %assign work1_ptr = LibBlockDWorkAddr(work1, "", "", 0)
    %assign work2_ptr = "&"+LibBlockPWork("", "", "", 0)
    %assign work3_ptr = "&"+LibBlockPWork("", "", "", 1)
    %assign work4_ptr = "&"+LibBlockPWork("", "", "", 2)
    %assign work5_ptr = LibBlockDWorkAddr(work5, "", "", 0)
    %assign work6_ptr = LibBlockDWorkAddr(work6, "", "", 0)
    %assign work7_ptr = LibBlockDWorkAddr(work7, "", "", 0)
    %%
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
    robot_world_distances_sfun_wrapper_output( %<u1_ptr>, %<u2_ptr>, %<u3_ptr>, %<u4_ptr>, %<u5_ptr>, %<u6_ptr>, %<u7_ptr>, %<u8_ptr>, %<u9_ptr>, %<u10_ptr>, %<u11_ptr>, %<u12_ptr>, %<u13_ptr>, %<u14_ptr>, %<u15_ptr>, %<u16_ptr>, %<u17_ptr>, %<y1_ptr>, %<y2_ptr>, %<y3_ptr>, %<y4_ptr>, %<y5_ptr>, %<y6_ptr>, %<y7_ptr>, %<y8_ptr>, %<work1_ptr>, %<work2_ptr>, %<work3_ptr>, %<work4_ptr>, %<work5_ptr>, %<work6_ptr>, %<work7_ptr>);
  %else 
    %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
    %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
    %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
    %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
    %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
    %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
    %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
    %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
    %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
    %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
    %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
    %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
    %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
    %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
    %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
    %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
    %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
    %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
    %assign y3_ptr = LibBlockOutputSignalAddr(2, "", "", 0)
    %assign y4_ptr = LibBlockOutputSignalAddr(3, "", "", 0)
    %assign y5_ptr = LibBlockOutputSignalAddr(4, "", "", 0)
    %assign y6_ptr = LibBlockOutputSignalAddr(5, "", "", 0)
    %assign y7_ptr = LibBlockOutputSignalAddr(6, "", "", 0)
    %assign y8_ptr = LibBlockOutputSignalAddr(7, "", "", 0)
    %assign work1_ptr = LibBlockDWorkAddr(work1, "", "", 0)
    %assign work2_ptr = "&"+LibBlockPWork("", "", "", 0)
    %assign work3_ptr = "&"+LibBlockPWork("", "", "", 1)
    %assign work4_ptr = "&"+LibBlockPWork("", "", "", 2)
    %assign work5_ptr = LibBlockDWorkAddr(work5, "", "", 0)
    %assign work6_ptr = LibBlockDWorkAddr(work6, "", "", 0)
    %assign work7_ptr = LibBlockDWorkAddr(work7, "", "", 0)
    %%
    robot_world_distances_out( (real_T*)%<u1_ptr>, (real_T*)%<u2_ptr>, (real_T*)%<u3_ptr>, (real_T*)%<u4_ptr>, (real_T*)%<u5_ptr>, (real_T*)%<u6_ptr>, (real_T*)%<u7_ptr>, (real_T*)%<u8_ptr>, (real_T*)%<u9_ptr>, (real_T*)%<u10_ptr>, (real_T*)%<u11_ptr>, (real_T*)%<u12_ptr>, (real_T*)%<u13_ptr>, (real_T*)%<u14_ptr>, (real_T*)%<u15_ptr>, (real_T*)%<u16_ptr>, (real_T*)%<u17_ptr>, %<y1_ptr>, %<y2_ptr>, %<y3_ptr>, %<y4_ptr>, %<y5_ptr>, %<y6_ptr>, %<y7_ptr>, %<y8_ptr>, %<work1_ptr>, %<work2_ptr>, %<work3_ptr>, %<work4_ptr>, %<work5_ptr>, %<work6_ptr>, %<work7_ptr>);
  %endif 
  %%
%endfunction

%% [EOF]
