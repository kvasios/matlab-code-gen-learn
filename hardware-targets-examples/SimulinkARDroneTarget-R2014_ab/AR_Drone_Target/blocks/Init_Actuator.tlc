%% File : Init_Actuator.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for Init_Actuator
%%
%% Simulink version      : 8.3 (R2014a) 27-Dec-2013
%% TLC file generated on : 02-Apr-2014 20:16:03

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'Init_Actuator';
     def.StartFcnSpec = 'Actuator_Initialization(void)';
     def.TerminateFcnSpec = 'Actuator_Stop(void)';
     def.HeaderFiles = {'act_init.h'};
     def.SourceFiles = {'act_init.c', 'Actuators.c', 'GPIO.c'};
     def.IncPaths = {'.'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements Init_Actuator "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %<LibAddToCommonIncludes("act_init.h")>
  %<SLibAddToStaticSources("act_init.c")>
  %<SLibAddToStaticSources("Actuators.c")>
  %<SLibAddToStaticSources("GPIO.c")>

  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Start ========================================================
%%
%function Start(block, system) Output
  %%
  %%
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
  Actuator_Initialization();
  %%
%endfunction

%% Function: Terminate ====================================================
%%
%function Terminate(block, system) Output
  %%
  %%
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
  Actuator_Stop();
  %%
%endfunction

%% [EOF]
