%% $RCSfile: NXTGetSet.tlc,v $
%% $Revision: 1.3.4.8 $
%%
%% Copyright 1990-2005 The MathWorks, Inc.
%% 
%selectfile NULL_FILE
%implements * "C"

%% NXTGetSet is a custom storage class that is used to implement
%% APIs for LEGO Mincstorms NXT devices

%% Function: DataAccess ======================================================
%% Abstract:
%%   DataAccess provides an API for requesting code fragments or other
%%   information corresponding to data of this custom storage class.
%%
%function DataAccess(record, request, idx, reim, extra) void

  %switch request
 
    %case "initialize"
      %% Use the default initialization to ground.
      %return ""
      %break
      
    %case "contents"
      %% Use the default reference to a global variable.
      %assign props = LibGetCustomStorageAttributes(record)
      %return "%<props.GetFunction>"
      %break

    %case "address"
      %% Use the default address of a global variable.
      %return "address not supported for accessors"
      %break

    %case "declare"
      %% Since the data is supposed to be internal to the code
      %% generated, generate no declaration for external use.
      %return ""
      %break

    %case "define"
      %% Use the default definition of a global variable.
      %return ""
      %break
      
    %case "layout"
      %% Uses The Mathworks' data layout.
      %return ["other"]
      %break

    %case "qualifier"
      %% No type qualifier.
      %return ""
      %break
      
    %case "set"
    %assign props = LibGetCustomStorageAttributes(record)
    %return "%<props.SetFunction>%<extra>);\n"

    %default
      %% Unknown access type.
      %return LibDefaultCustomStorageUnknownDataAccessType ...
	(record, request, idx, reim)
      %break

  %endswitch

%endfunction



%% Function: ClassAccess ============================================
%% Abstract:
%%   ClassAccess provides an API for requesting information or action
%%   corresponding to the custom storage class
%%
%function ClassAccess(record, request) void

  %switch request
    %case "setup"
      %assign numData = LibCustomStorageClassRecordNumData(record)
      %foreach idx = numData

	  %% Get the idx'th data record with BitField storage
	  %assign item = LibGetDataRecord(record, idx)
	
	  %% Make sure the record is non-complex.
	  %<LibCustomStorageVerifyRecordIsNonComplex(item)>

	  %% Make sure function names were specified
%%	  %<LibCustomStorageVerifyAttributesIsNotEmpty(item, "GetFunction")>
%%	  %<LibCustomStorageVerifyAttributesIsNotEmpty(item, "SetFunction")>

      %endforeach
      %return
      %break

    %case "comment"
      %return LibDefaultCustomStorageComment(record)
      %break

    %default
      %% Unknown access type.
      %return LibDefaultCustomStorageUnknownClassAccessType ...
	(record, request)
      %break
      
  %endswitch
      
%endfunction


%% Function: Version ============================================
%% Abstract:
%%
%function Version(record) void
  %return 2
%endfunction
